name: Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage pytest pytest-cov
        pip install torch
    - name: Run tests with coverage
      run: |
        coverage run -m pytest
    - name: Report coverage
      run: |
        coverage report
        coverage xml
    - name: Upload coverage artifact
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: coverage.xml
    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const coverage = fs.readFileSync('coverage.xml', 'utf8');
          const match = coverage.match(/<coverage[^>]*line-rate="([^"]*)"/);
          const lineRate = match ? (parseFloat(match[1]) * 100).toFixed(2) : null;
          if (lineRate) {
            const comment = `## Code Coverage Report\n\nCoverage: **${lineRate}%**`;
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: comment
            });
          } else {
            const comment = '## Code Coverage Report\n\nCoverage data not found.';
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: comment
            });
          }

